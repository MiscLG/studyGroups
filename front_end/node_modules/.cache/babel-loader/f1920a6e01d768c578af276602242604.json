{"ast":null,"code":"import _defineProperty from \"/home/misclg/Desktop/GitHubRepos/study_groups/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/misclg/Desktop/GitHubRepos/study_groups/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/misclg/Desktop/GitHubRepos/study_groups/front_end/src/components/CreateStudent.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { CreateAddressNested, CreateAddress } from \"./CreateAddress\";\nimport { stat } from \"fs\";\n\nconst CreateStudent = () => {\n  const _useState = useState({\n    id: 0,\n    name: \"\",\n    address_id: \"\",\n    address: {\n      name: \"\",\n      street: \"\",\n      city: \"\",\n      zip: 0\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const resetState = () => {\n    setState({\n      id: 0,\n      name: \"\",\n      address_id: \"\",\n      address: {\n        name: \"\",\n        street: \"\",\n        city: \"\",\n        zip: 0\n      }\n    });\n  };\n\n  const handleInput = event => {\n    let field = event.target;\n    setState(_objectSpread({}, state, {\n      [field.name]: field.value\n    }));\n  };\n\n  const handleAddressInput = event => {\n    let field = event.target;\n    setState(_objectSpread({}, state, {\n      address: _objectSpread({}, state.address, {\n        [field.name]: field.value\n      })\n    }));\n  };\n\n  const getAddress = childState => {\n    console.log(_objectSpread({}, childState));\n    setState(_objectSpread({}, state, {\n      address: childState\n    }));\n    console.log(state.address);\n  };\n\n  const logInput = () => {\n    const address = state.address;\n    console.log(\"Form submitted:\");\n    console.log(\"Student ID: \".concat(state.id));\n    console.log(\"Name: \".concat(state.name));\n    console.log(\"Address: \".concat(address.name, \" \").concat(address.street, \" \").concat(address.city, \" \").concat(address.zip));\n  };\n\n  const callDbApi = (path, postCallback) => {\n    axios.post(\"http://localhost:4000/\".concat(path, \"/add\"), postCallback()).then(res => {\n      console.log(res.data.id);\n\n      if (path === \"addresses\") {\n        setState(_objectSpread({}, state, {\n          address_id: \"\".concat(res.data.id)\n        }));\n        console.log(state.address);\n        callDbApi(\"students\", makePostInstance);\n        console.log(\"ID: \".concat(state.address_id, \" / \").concat(res.data.id));\n      }\n    });\n  };\n\n  const makeAddressPostInstance = () => {\n    return {\n      address_name: state.address.name,\n      address_street: state.address.street,\n      address_city: state.address.city,\n      address_zip: state.address.zip\n    };\n  };\n\n  const makePostInstance = () => {\n    console.log(\"ID\" + state.address_id);\n    return {\n      student_id: state.id,\n      student_name: state.name,\n      _student_address: state.address_id\n    };\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    logInput();\n    await callDbApi(\"addresses\", makeAddressPostInstance); // resetState();\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Create Student\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Student ID: \"), React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"id\",\n    value: state.id,\n    onChange: handleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Name: \"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"name\",\n    value: state.name,\n    onChange: handleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Address\"), React.createElement(CreateAddressNested, Object.assign({}, state.address, {\n    submit: getAddress,\n    handleInput: handleAddressInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Create Student\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }))));\n};\n\nexport default CreateStudent;","map":{"version":3,"sources":["/home/misclg/Desktop/GitHubRepos/study_groups/front_end/src/components/CreateStudent.js"],"names":["React","useState","axios","CreateAddressNested","CreateAddress","stat","CreateStudent","id","name","address_id","address","street","city","zip","state","setState","resetState","handleInput","event","field","target","value","handleAddressInput","getAddress","childState","console","log","logInput","callDbApi","path","postCallback","post","then","res","data","makePostInstance","makeAddressPostInstance","address_name","address_street","address_city","address_zip","student_id","student_name","_student_address","handleSubmit","preventDefault","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport { CreateAddressNested, CreateAddress } from \"./CreateAddress\";\nimport { stat } from \"fs\";\n\nconst CreateStudent = () => {\n  const [state, setState] = useState({\n    id: 0,\n    name: \"\",\n    address_id: \"\",\n    address: {\n      name: \"\",\n      street: \"\",\n      city: \"\",\n      zip: 0\n    }\n  });\n\n  const resetState = () => {\n    setState({\n      id: 0,\n      name: \"\",\n      address_id: \"\",\n      address: {\n        name: \"\",\n        street: \"\",\n        city: \"\",\n        zip: 0\n      }\n    });\n  };\n  const handleInput = event => {\n    let field = event.target;\n    setState({ ...state, [field.name]: field.value });\n  };\n\n  const handleAddressInput = event => {\n    let field = event.target;\n    setState({\n      ...state,\n      address: {\n        ...state.address,\n        [field.name]: field.value\n      }\n    });\n  };\n\n  const getAddress = childState => {\n    console.log({ ...childState });\n    setState({\n      ...state,\n      address: childState\n    });\n    console.log(state.address);\n  };\n\n  const logInput = () => {\n    const address = state.address;\n    console.log(`Form submitted:`);\n    console.log(`Student ID: ${state.id}`);\n    console.log(`Name: ${state.name}`);\n    console.log(\n      `Address: ${address.name} ${address.street} ${address.city} ${address.zip}`\n    );\n  };\n  const callDbApi = (path, postCallback) => {\n    axios\n      .post(`http://localhost:4000/${path}/add`, postCallback())\n      .then(res => {\n        console.log(res.data.id);\n        if (path === \"addresses\") {\n          setState({\n            ...state,\n            address_id: `${res.data.id}`\n          });\n          console.log(state.address);\n          callDbApi(\"students\", makePostInstance);\n          console.log(`ID: ${state.address_id} / ${res.data.id}`);\n        }\n      });\n  };\n\n  const makeAddressPostInstance = () => {\n    return {\n      address_name: state.address.name,\n      address_street: state.address.street,\n      address_city: state.address.city,\n      address_zip: state.address.zip\n    };\n  };\n\n  const makePostInstance = () => {\n    console.log(\"ID\" + state.address_id);\n    return {\n      student_id: state.id,\n      student_name: state.name,\n      _student_address: state.address_id\n    };\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    logInput();\n    await callDbApi(\"addresses\", makeAddressPostInstance);\n    // resetState();\n  };\n  return (\n    <div style={{ marginTop: 10 }}>\n      <h3>Create Student</h3>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Student ID: </label>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            name=\"id\"\n            value={state.id}\n            onChange={handleInput}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"name\"\n            value={state.name}\n            onChange={handleInput}\n          />\n        </div>\n        <h4>Address</h4>\n        <CreateAddressNested\n          {...state.address}\n          submit={getAddress}\n          handleInput={handleAddressInput}\n        />\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Create Student\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateStudent;\n"]},"metadata":{},"sourceType":"module"}