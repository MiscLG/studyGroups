{"ast":null,"code":"import _defineProperty from \"/home/misclg/Desktop/GitHubRepos/study_groups/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/misclg/Desktop/GitHubRepos/study_groups/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/misclg/Desktop/GitHubRepos/study_groups/front_end/src/components/CreateCourse.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { CreateAddressNested, CreateAddress } from \"./CreateAddress\";\nimport { stat } from \"fs\";\n\nconst CreateCourse = () => {\n  const _useState = useState({\n    _id: \"\",\n    course_name: \"\",\n    course_instructor_name: \"\",\n    course_roster: [],\n    course_schedule: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  let addressID;\n\n  const resetState = () => {\n    setState({\n      _id: \"\",\n      course_name: \"\",\n      course_instructor_name: \"\",\n      course_roster: [],\n      course_schedule: []\n    });\n  };\n\n  const handleInput = event => {\n    let field = event.target;\n    setState(_objectSpread({}, state, {\n      [field.name]: field.value\n    }));\n  }; // const handleAddressInput = event => {\n  //   let field = event.target;\n  //   setState({\n  //     ...state,\n  //     address: {\n  //       ...state.address,\n  //       [field.name]: field.value\n  //     }\n  //   });\n  // };\n\n\n  const getAddress = childState => {\n    console.log(_objectSpread({}, childState));\n    setState(_objectSpread({}, state, {\n      address: childState\n    }));\n    console.log(state.address);\n  };\n\n  const logInput = () => {\n    const address = state.address;\n    console.log(\"Form submitted:\");\n    console.log(\"Course ID: \".concat(state.id));\n    console.log(\"Name: \".concat(state.name));\n    console.log(\"Address: \".concat(address.name, \" \").concat(address.street, \" \").concat(address.city, \" \").concat(address.zip));\n    console.log(\"Schedule Key:\".concat(state.schedule));\n    console.log(\"Preferences Key: \".concat(state.preferences));\n  };\n\n  const callDbApi = (path, postCallback) => {\n    axios.post(\"http://localhost:4000/\".concat(path, \"/add\"), postCallback()).then(res => {\n      console.log(res.data);\n      addressID = res.data.id;\n\n      let childState = _objectSpread({}, state.address, {\n        id: res.data.id\n      });\n\n      console.log(childState);\n\n      if (path === \"addresses\") {\n        setState(_objectSpread({}, state, {\n          address: childState\n        }));\n        console.log(\"ID: \".concat(state.address.id, \" / \").concat(res.data.id));\n      }\n    }).then(() => {\n      if (path !== \"courses\") {\n        callDbApi(\"courses\", makePostInstance);\n      }\n    });\n  };\n\n  const makeAddressPostInstance = () => {\n    return {\n      address_name: state.address.name,\n      address_street: state.address.street,\n      address_city: state.address.city,\n      address_zip: state.address.zip\n    };\n  };\n\n  const makePostInstance = () => {\n    console.log(addressID);\n    console.log(state.address.id);\n    return {\n      course_id: state.id,\n      course_name: state.name,\n      _course_address: addressID,\n      _course_schedule: state.schedule.split(\",\"),\n      _course_preferences: state.preferences\n    };\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    logInput();\n    callDbApi(\"addresses\", makeAddressPostInstance);\n    resetState();\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Create Course\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Address ID: \", state.address.id), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Course ID: \"), React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    name: \"id\",\n    value: state.id,\n    onChange: handleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Name: \"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"name\",\n    value: state.name,\n    onChange: handleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Schedule Key: schedule entry keys as comma separated values\", \" \"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"schedule\",\n    value: state.schedule,\n    onChange: handleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Preferences Key: \"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"preferences\",\n    value: state.preferences,\n    onChange: handleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Address\"), React.createElement(CreateAddressNested, Object.assign({}, state.address, {\n    submit: getAddress,\n    handleInput: handleAddressInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Create Course\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }))));\n};\n\nexport default CreateCourse;","map":{"version":3,"sources":["/home/misclg/Desktop/GitHubRepos/study_groups/front_end/src/components/CreateCourse.js"],"names":["React","useState","axios","CreateAddressNested","CreateAddress","stat","CreateCourse","_id","course_name","course_instructor_name","course_roster","course_schedule","state","setState","addressID","resetState","handleInput","event","field","target","name","value","getAddress","childState","console","log","address","logInput","id","street","city","zip","schedule","preferences","callDbApi","path","postCallback","post","then","res","data","makePostInstance","makeAddressPostInstance","address_name","address_street","address_city","address_zip","course_id","_course_address","_course_schedule","split","_course_preferences","handleSubmit","preventDefault","marginTop","handleAddressInput"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport { CreateAddressNested, CreateAddress } from \"./CreateAddress\";\nimport { stat } from \"fs\";\n\nconst CreateCourse = () => {\n  const [state, setState] = useState({\n    _id: \"\",\n    course_name: \"\",\n    course_instructor_name: \"\",\n    course_roster: [],\n    course_schedule: []\n  });\n  let addressID;\n  const resetState = () => {\n    setState({\n      _id: \"\",\n      course_name: \"\",\n      course_instructor_name: \"\",\n      course_roster: [],\n      course_schedule: []\n    });\n  };\n  const handleInput = event => {\n    let field = event.target;\n    setState({ ...state, [field.name]: field.value });\n  };\n\n  // const handleAddressInput = event => {\n  //   let field = event.target;\n  //   setState({\n  //     ...state,\n  //     address: {\n  //       ...state.address,\n  //       [field.name]: field.value\n  //     }\n  //   });\n  // };\n\n  const getAddress = childState => {\n    console.log({ ...childState });\n    setState({\n      ...state,\n      address: childState\n    });\n    console.log(state.address);\n  };\n\n  const logInput = () => {\n    const address = state.address;\n    console.log(`Form submitted:`);\n    console.log(`Course ID: ${state.id}`);\n    console.log(`Name: ${state.name}`);\n    console.log(\n      `Address: ${address.name} ${address.street} ${address.city} ${address.zip}`\n    );\n    console.log(`Schedule Key:${state.schedule}`);\n    console.log(`Preferences Key: ${state.preferences}`);\n  };\n  const callDbApi = (path, postCallback) => {\n    axios\n      .post(`http://localhost:4000/${path}/add`, postCallback())\n      .then(res => {\n        console.log(res.data);\n        addressID = res.data.id;\n        let childState = { ...state.address, id: res.data.id };\n        console.log(childState);\n        if (path === \"addresses\") {\n          setState({\n            //updates state after post methods are processes, so I use addressId\n            ...state,\n            address: childState\n          });\n          console.log(`ID: ${state.address.id} / ${res.data.id}`);\n        }\n      })\n      .then(() => {\n        if (path !== \"courses\") {\n          callDbApi(\"courses\", makePostInstance);\n        }\n      });\n  };\n\n  const makeAddressPostInstance = () => {\n    return {\n      address_name: state.address.name,\n      address_street: state.address.street,\n      address_city: state.address.city,\n      address_zip: state.address.zip\n    };\n  };\n\n  const makePostInstance = () => {\n    console.log(addressID);\n    console.log(state.address.id);\n    return {\n      course_id: state.id,\n      course_name: state.name,\n      _course_address: addressID,\n      _course_schedule: state.schedule.split(\",\"),\n      _course_preferences: state.preferences\n    };\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    logInput();\n    callDbApi(\"addresses\", makeAddressPostInstance);\n    resetState();\n  };\n  return (\n    <div style={{ marginTop: 10 }}>\n      <h3>Create Course</h3>\n      <p>Address ID: {state.address.id}</p>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Course ID: </label>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            name=\"id\"\n            value={state.id}\n            onChange={handleInput}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"name\"\n            value={state.name}\n            onChange={handleInput}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>\n            Schedule Key: schedule entry keys as comma separated values{\" \"}\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"schedule\"\n            value={state.schedule}\n            onChange={handleInput}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Preferences Key: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"preferences\"\n            value={state.preferences}\n            onChange={handleInput}\n          />\n        </div>\n        <h4>Address</h4>\n        <CreateAddressNested\n          {...state.address}\n          submit={getAddress}\n          handleInput={handleAddressInput}\n        />\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Create Course\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateCourse;\n"]},"metadata":{},"sourceType":"module"}